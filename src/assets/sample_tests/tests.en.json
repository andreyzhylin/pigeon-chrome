[{"description":"Basics","url":"https://www.google.com/","tests":[{"description":"Page loaded","code":"var searchInput = document.getElementsByName('q')[0];\n\npigeon.expect('Search input is defined', typeof searchInput !== 'undefined');\npigeon.expect('Search input is actually input', searchInput.tagName === 'INPUT');\n\n// Use resolve, when all cases are completed\npigeon.resolve();","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:125","errorMessage":""},{"description":"Google can find github website","code":"location.href = '/#q=github';\n// Lets wait some time while google execute our search request\n\nsetTimeout(function () {\n  pigeon.expect('Results are loaded', typeof ires !== 'undefined');\n  pigeon.expect('Google found github website', ires.innerText.indexOf('github.com') !== -1);\n  \n  // Use resolve, when all cases are completed\n  pigeon.resolve();\n}, 1000);\n\npigeon.expect('The results did not appear instantly', typeof ires === 'undefined');\n// Here our script finishes it execution, \n// but a test run is completed after the 'pigeon.resolve' method is called (or timeout)","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:184","errorMessage":"","isDebug":true},{"description":"Google can find pigeon-chrome app","code":"location.href = '/#q=pigeon-chrome';\n// Lets wait some time while google execute our search request\n\nsetTimeout(function () {\n  pigeon.expect('Results are loaded', typeof ires !== 'undefined');\n  pigeon.expect('Google cant find pigeon-chrome app :(', ires.innerText.indexOf('pigeon-chrome') !== -1);\n  \n  // Use resolve, when all cases are completed\n  pigeon.resolve();\n}, 1000);","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:573","errorMessage":"Google cant find pigeon-chrome app :(; "}],"$$hashKey":"object:114"},{"description":"Error handling","url":"http://github.com","tests":[{"description":"Compilation error","code":"if { // Compilation error\n\npigeon.expect('Always success', true);\npigeon.resolve();","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:986","errorMessage":"Unexpected token {"},{"code":"var foo = bar.baz;\n\npigeon.expect('Always success', true);\npigeon.resolve();","description":"Runtime error","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:1284","errorMessage":"bar is not defined"},{"description":"Timeout","code":"// Timeout error appears when pigeon.resolve function was not caused by the allotted time\n// You can change timeout on 'Settings' tab or disable on specified test by turning on 'Debug mode'\n\npigeon.expect('Always success', true);\n// pigeon.resolve();","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:1355","errorMessage":"TIMEOUT"},{"description":"Pigeon expect error","code":"// Pigeon expect method expects Boolean value as its second param\n// if the value is not Boolean, you get an error\npigeon.expect('The Ultimate Question of Life, the Universe, and Everything.', 42);\npigeon.resolve();","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:1437","errorMessage":"Expected 'Boolean' value, returned: '42'"},{"description":"Custom error","code":"pigeon.expect('Always success', true);\n\n// You can use pigeon.reject method to set error status of your test\npigeon.reject('Custom error description');\n\npigeon.resolve();","status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:1522","errorMessage":"Custom error description"}],"$$hashKey":"object:944"},{"description":"Debugging","url":"http://www.wikipedia.org","isNewWindow":true,"tests":[{"description":"Debug mode","code":"// In debug mode tab will not be closed (even after timeout)\n// so you can debug your tests\npigeon.expect('Always success', true);\npigeon.expect('Always failed', false);\npigeon.expect('Not boolean', [1]);\npigeon.resolve();\n","isDebug":true,"status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:702","errorMessage":"Expected 'Boolean' value, returned: '1'"},{"description":"Developer tools","code":"// You also can use debugging features like console.log, debugger, etc.\nconsole.log('Begin execution');\n\nvar logo = document.getElementsByClassName('central-featured-logo')[0];\nlogo.onclick = function () { \n  console.log('Clicked on logo');\n  debugger;\n  pigeon.expect('Always true', true);\n  pigeon.resolve();\n}\n","isDebug":true,"status":"UNKNOWN","isExecuting":false,"$$hashKey":"object:923","errorMessage":""}],"$$hashKey":"object:615"}]